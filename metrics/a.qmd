---
title: "Chapter 1: Correlations and Basics of Regression"
subtitle: "Econometric Methods (for Social Scientists)"
format:
    html:
        page-layout: article
        grid:
          sidebar-width: 300px
          body-width: 750px
          margin-width: 250px
          gutter-width: 2em
        fontsize: 12.5pt
        theme: yeti
        toc: TRUE
        toc-depth: 2
        toc-location: left
        toc-expand: true
        toc-title: "Chapter 1: Correlations and Basics of Regression"
        mainfont: "Computer Modern"
        title-block-banner: true
        classoption: fleqn
        html-math-method: katex
---

------------------------------------------------------------------------

[Course Homepage](https://politicalscience.github.io/metrics/)

# Implementation in R

The packages we will need are:

```{r, message = FALSE}
library(tidyverse)
library(fixest)
library(texreg)
```

```{r, echo = FALSE, message = FALSE}
setwd("/Users/kevinli/Documents/GitHub/politicalscience.github.io/metrics")
dta <- read_csv("data/olken_data.csv")
```

<br />

## Multiple Linear Regression in R

To run simple linear regression, we use the *feols()* function.

-   The argument *se = "hetero"* tells R to calculate heteroscedasticity-robust standard errors, which will be discussed later in chapter 4. Just know it is standard to do so.
-   We can add more explanatory variables by using + and then add more. We can reduce the number of explanatory variables down to one.

```{r, eval = FALSE}
modelname <- feols(Y ~ X1 + X2 + X3, data = mydata, se = "hetero")
summary(modelname)
```

For example:

```{r, message = FALSE}
model1 <- feols(pct_missing ~ treat_invite + head_edu + mosques + pct_poor,
                data = dta, se = "hetero")
summary(model1)
```

We can see the output estimate of the intercept and all the coefficients.

-   These rows include the estimate, the standard error, the t-test statistic, and the p-value. This gives all of the information we need to run linear regression and hypothesis tests.

For how to do categorical variables, consult chapter 1.

<br >

We can also use the base-R *lm()* function, however, this does not calculate heteroscedasticity-robust standard errors (once again, will be discussed in chapter 4).

```{r, eval = FALSE}
modelname <- lm(y ~ x1 + x2, data = mydata)
summary(modelname)
```

<br />

## Creating Regression Tables

We can create regression tables using the *texreg()* or *screenreg()* functions.

-   *texreg()* produces LaTeX code that you can insert into a LaTeX document
-   *screenreg()* produces something that looks nice in a R document.

The syntax is as follows (you can replace *screenreg()* with *texreg()* ):

```{r, eval = FALSE}
screenreg(l = list(modelname),
  custom.model.names = c("Outcome Variable Name"),
  custom.coef.names = c("Intercept", "X1 Variable Name", "X2 Variable Name"),
  digits = 3)
```

For example:

```{r}
screenreg(l = list(model1),
  custom.model.names = c("Pct_Missing"),
  custom.coef.names = c("Intercept", "Treatment", "head_edu", "mosques", "pct-poor"),
  digits = 3)
```

<br />

<br />

------------------------------------------------------------------------

[Course Homepage](https://politicalscience.github.io/metrics/)
